{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport * as PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\nvar LAYER_TYPES = ['fill', 'line', 'symbol', 'circle', 'fill-extrusion', 'raster', 'background', 'heatmap', 'hillshade', 'sky'];\nvar propTypes = {\n  type: PropTypes.oneOf(LAYER_TYPES).isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\nfunction diffLayerStyles(map, id, props, prevProps) {\n  var _props$layout = props.layout,\n    layout = _props$layout === void 0 ? {} : _props$layout,\n    _props$paint = props.paint,\n    paint = _props$paint === void 0 ? {} : _props$paint,\n    filter = props.filter,\n    minzoom = props.minzoom,\n    maxzoom = props.maxzoom,\n    beforeId = props.beforeId,\n    otherProps = _objectWithoutProperties(props, [\"layout\", \"paint\", \"filter\", \"minzoom\", \"maxzoom\", \"beforeId\"]);\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n  if (layout !== prevProps.layout) {\n    var prevLayout = prevProps.layout || {};\n    for (var key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n    for (var _key in prevLayout) {\n      if (!layout.hasOwnProperty(_key)) {\n        map.setLayoutProperty(id, _key, undefined);\n      }\n    }\n  }\n  if (paint !== prevProps.paint) {\n    var prevPaint = prevProps.paint || {};\n    for (var _key2 in paint) {\n      if (!deepEqual(paint[_key2], prevPaint[_key2])) {\n        map.setPaintProperty(id, _key2, paint[_key2]);\n      }\n    }\n    for (var _key3 in prevPaint) {\n      if (!paint.hasOwnProperty(_key3)) {\n        map.setPaintProperty(id, _key3, undefined);\n      }\n    }\n  }\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n  for (var _key4 in otherProps) {\n    if (!deepEqual(otherProps[_key4], prevProps[_key4])) {\n      map.setLayerProperty(id, _key4, otherProps[_key4]);\n    }\n  }\n}\nfunction createLayer(map, id, props) {\n  if (map.style && map.style._loaded) {\n    var options = _objectSpread(_objectSpread({}, props), {}, {\n      id: id\n    });\n    delete options.beforeId;\n    map.addLayer(options, props.beforeId);\n  }\n}\nfunction updateLayer(map, id, props, prevProps) {\n  assert(props.id === prevProps.id, 'layer id changed');\n  assert(props.type === prevProps.type, 'layer type changed');\n  try {\n    diffLayerStyles(map, id, props, prevProps);\n  } catch (error) {\n    console.warn(error);\n  }\n}\nvar layerCounter = 0;\nfunction Layer(props) {\n  var context = useContext(MapContext);\n  var propsRef = useRef({\n    id: props.id,\n    type: props.type\n  });\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    setStyleLoaded = _useState2[1];\n  var id = useMemo(function () {\n    return props.id || \"jsx-layer-\".concat(layerCounter++);\n  }, []);\n  var map = context.map;\n  useEffect(function () {\n    if (map) {\n      var forceUpdate = function forceUpdate() {\n        return setStyleLoaded(function (version) {\n          return version + 1;\n        });\n      };\n      map.on('styledata', forceUpdate);\n      return function () {\n        map.off('styledata', forceUpdate);\n        if (map.style && map.style._loaded) {\n          map.removeLayer(id);\n        }\n      };\n    }\n    return undefined;\n  }, [map]);\n  var layer = map && map.style && map.getLayer(id);\n  if (layer) {\n    updateLayer(map, id, props, propsRef.current);\n  } else {\n    createLayer(map, id, props);\n  }\n  propsRef.current = props;\n  return null;\n}\nLayer.propTypes = propTypes;\nexport default Layer;","map":{"version":3,"mappings":"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","names":["useContext","useEffect","useMemo","useState","useRef","PropTypes","MapContext","assert","deepEqual","LAYER_TYPES","propTypes","type","oneOf","isRequired","id","string","source","beforeId","diffLayerStyles","map","props","prevProps","layout","_props$paint","paint","filter","minzoom","maxzoom","otherProps","moveLayer","prevLayout","key","setLayoutProperty","hasOwnProperty","undefined","prevPaint","setPaintProperty","setFilter","setLayerZoomRange","setLayerProperty","createLayer","style","_loaded","options","addLayer","updateLayer","error","console","warn","layerCounter","Layer","context","propsRef","_useState2","setStyleLoaded","forceUpdate","version","on","off","removeLayer","layer","getLayer","current"],"sources":["../../../src/components/layer.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {useContext, useEffect, useMemo, useState, useRef} from 'react';\nimport * as PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\n\nconst LAYER_TYPES = [\n  'fill',\n  'line',\n  'symbol',\n  'circle',\n  'fill-extrusion',\n  'raster',\n  'background',\n  'heatmap',\n  'hillshade',\n  'sky'\n];\n\nconst propTypes = {\n  type: PropTypes.oneOf(LAYER_TYPES).isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\n\n/* eslint-disable complexity, max-statements */\nfunction diffLayerStyles(map, id, props, prevProps) {\n  const {layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId, ...otherProps} = props;\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n  if (layout !== prevProps.layout) {\n    const prevLayout = prevProps.layout || {};\n    for (const key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n    for (const key in prevLayout) {\n      if (!layout.hasOwnProperty(key)) {\n        map.setLayoutProperty(id, key, undefined);\n      }\n    }\n  }\n  if (paint !== prevProps.paint) {\n    const prevPaint = prevProps.paint || {};\n    for (const key in paint) {\n      if (!deepEqual(paint[key], prevPaint[key])) {\n        map.setPaintProperty(id, key, paint[key]);\n      }\n    }\n    for (const key in prevPaint) {\n      if (!paint.hasOwnProperty(key)) {\n        map.setPaintProperty(id, key, undefined);\n      }\n    }\n  }\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n  for (const key in otherProps) {\n    if (!deepEqual(otherProps[key], prevProps[key])) {\n      map.setLayerProperty(id, key, otherProps[key]);\n    }\n  }\n}\n\nfunction createLayer(map, id, props) {\n  if (map.style && map.style._loaded) {\n    const options = {...props, id};\n    delete options.beforeId;\n\n    map.addLayer(options, props.beforeId);\n  }\n}\n\nfunction updateLayer(map, id, props, prevProps) {\n  assert(props.id === prevProps.id, 'layer id changed');\n  assert(props.type === prevProps.type, 'layer type changed');\n\n  try {\n    diffLayerStyles(map, id, props, prevProps);\n  } catch (error) {\n    console.warn(error); // eslint-disable-line\n  }\n}\n/* eslint-enable complexity, max-statements */\n\nlet layerCounter = 0;\n\nfunction Layer(props) {\n  const context = useContext(MapContext);\n  const propsRef = useRef({id: props.id, type: props.type});\n  const [, setStyleLoaded] = useState(0);\n\n  const id = useMemo(() => props.id || `jsx-layer-${layerCounter++}`, []);\n  const {map} = context;\n\n  useEffect(() => {\n    if (map) {\n      const forceUpdate = () => setStyleLoaded(version => version + 1);\n      map.on('styledata', forceUpdate);\n\n      return () => {\n        map.off('styledata', forceUpdate);\n        if (map.style && map.style._loaded) {\n          map.removeLayer(id);\n        }\n      };\n    }\n    return undefined;\n  }, [map]);\n\n  const layer = map && map.style && map.getLayer(id);\n  if (layer) {\n    updateLayer(map, id, props, propsRef.current);\n  } else {\n    createLayer(map, id, props);\n  }\n\n  // Store last rendered props\n  propsRef.current = props;\n\n  return null;\n}\n\nLayer.propTypes = propTypes;\n\nexport default Layer;\n"]},"metadata":{},"sourceType":"module"}