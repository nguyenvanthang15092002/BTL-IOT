{"ast":null,"code":"import { getAsync } from \"../constant/request\";\nlet baseUrl = 'http://api.airvisual.com/v2';\nlet keyString = `key=${process.env.REACT_APP_MAP_AIR_VISUAL_TOKEN}`;\nexport async function getListCountries() {\n  let url = baseUrl + `/countries?` + keyString;\n  const response = await getAsync(url);\n  return (response === null || response === void 0 ? void 0 : response.data) || [];\n}\nexport async function getListStates(countryName) {\n  let url = baseUrl + `/states?country=${countryName}&` + keyString;\n  const response = await getAsync(url);\n  return (response === null || response === void 0 ? void 0 : response.data) || [];\n}\nexport async function getListCities(stateName, countryName) {\n  var _response$data;\n\n  let url = baseUrl + `/cities?state=${stateName}&country=${countryName}&` + keyString;\n  const response = await getAsync(url);\n  return (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data) || [];\n}\nexport async function getSpecializedCity(cityName, stateName, countryName) {\n  let url = baseUrl + `/city?city=${cityName}&state=${stateName}&country=${countryName}&` + keyString;\n  const response = await getAsync(url);\n  return (response === null || response === void 0 ? void 0 : response.data) || [];\n}\nexport async function getRank() {\n  //enterprise\n  let url = baseUrl + `/city_ranking&` + keyString;\n  const response = await getAsync(url);\n  return (response === null || response === void 0 ? void 0 : response.data) || [];\n}\nexport async function getNearestCity() {\n  var _response$data2;\n\n  let url = baseUrl + `/nearest_city?` + keyString;\n  const response = await getAsync(url);\n  return (response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data) || {};\n}","map":{"version":3,"sources":["E:/CongNgheThongTinBk/20221/IotVaUngDung/btl/Nhom10/sourcecode/iot-web-fe/src/services/airVisualService.js"],"names":["getAsync","baseUrl","keyString","process","env","REACT_APP_MAP_AIR_VISUAL_TOKEN","getListCountries","url","response","data","getListStates","countryName","getListCities","stateName","getSpecializedCity","cityName","getRank","getNearestCity"],"mappings":"AAAA,SAASA,QAAT,QAAyB,qBAAzB;AAEA,IAAIC,OAAO,GAAG,6BAAd;AACA,IAAIC,SAAS,GAAI,OAAMC,OAAO,CAACC,GAAR,CAAYC,8BAA+B,EAAlE;AACA,OAAO,eAAeC,gBAAf,GAAkC;AACvC,MAAIC,GAAG,GAAGN,OAAO,GAAI,aAAX,GAA0BC,SAApC;AACA,QAAMM,QAAQ,GAAG,MAAMR,QAAQ,CAACO,GAAD,CAA/B;AACA,SAAO,CAAAC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,IAAV,KAAkB,EAAzB;AACD;AAED,OAAO,eAAeC,aAAf,CAA6BC,WAA7B,EAA0C;AAC/C,MAAIJ,GAAG,GAAGN,OAAO,GAAI,mBAAkBU,WAAY,GAAzC,GAA8CT,SAAxD;AACA,QAAMM,QAAQ,GAAG,MAAMR,QAAQ,CAACO,GAAD,CAA/B;AACA,SAAO,CAAAC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,IAAV,KAAkB,EAAzB;AACD;AAED,OAAO,eAAeG,aAAf,CAA6BC,SAA7B,EAAwCF,WAAxC,EAAqD;AAAA;;AAC1D,MAAIJ,GAAG,GAAGN,OAAO,GAAI,iBAAgBY,SAAU,YAAWF,WAAY,GAA5D,GAAiET,SAA3E;AACA,QAAMM,QAAQ,GAAG,MAAMR,QAAQ,CAACO,GAAD,CAA/B;AACA,SAAO,CAAAC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,8BAAAA,QAAQ,CAAEC,IAAV,kEAAgBA,IAAhB,KAAwB,EAA/B;AACD;AAED,OAAO,eAAeK,kBAAf,CAAkCC,QAAlC,EAA4CF,SAA5C,EAAuDF,WAAvD,EAAoE;AACzE,MAAIJ,GAAG,GAAGN,OAAO,GAAI,cAAac,QAAS,UAASF,SAAU,YAAWF,WAAY,GAA3E,GAAgFT,SAA1F;AACA,QAAMM,QAAQ,GAAG,MAAMR,QAAQ,CAACO,GAAD,CAA/B;AACA,SAAO,CAAAC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,IAAV,KAAkB,EAAzB;AACD;AAED,OAAO,eAAeO,OAAf,GAAyB;AAAE;AAChC,MAAIT,GAAG,GAAGN,OAAO,GAAI,gBAAX,GAA6BC,SAAvC;AACA,QAAMM,QAAQ,GAAG,MAAMR,QAAQ,CAACO,GAAD,CAA/B;AACA,SAAO,CAAAC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,IAAV,KAAkB,EAAzB;AAED;AAED,OAAO,eAAeQ,cAAf,GAAgC;AAAA;;AACrC,MAAIV,GAAG,GAAGN,OAAO,GAAI,gBAAX,GAA6BC,SAAvC;AACA,QAAMM,QAAQ,GAAG,MAAMR,QAAQ,CAACO,GAAD,CAA/B;AACA,SAAO,CAAAC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEC,IAAV,oEAAgBA,IAAhB,KAAwB,EAA/B;AACD","sourcesContent":["import { getAsync } from \"../constant/request\";\r\n\r\nlet baseUrl = 'http://api.airvisual.com/v2'\r\nlet keyString = `key=${process.env.REACT_APP_MAP_AIR_VISUAL_TOKEN}`\r\nexport async function getListCountries() {\r\n  let url = baseUrl + `/countries?` + keyString\r\n  const response = await getAsync(url);\r\n  return response?.data || []\r\n}\r\n\r\nexport async function getListStates(countryName) {\r\n  let url = baseUrl + `/states?country=${countryName}&` + keyString\r\n  const response = await getAsync(url);\r\n  return response?.data || []\r\n}\r\n\r\nexport async function getListCities(stateName, countryName) {\r\n  let url = baseUrl + `/cities?state=${stateName}&country=${countryName}&` + keyString\r\n  const response = await getAsync(url);\r\n  return response?.data?.data || []\r\n}\r\n\r\nexport async function getSpecializedCity(cityName, stateName, countryName) {\r\n  let url = baseUrl + `/city?city=${cityName}&state=${stateName}&country=${countryName}&` + keyString\r\n  const response = await getAsync(url);\r\n  return response?.data || []\r\n}\r\n\r\nexport async function getRank() { //enterprise\r\n  let url = baseUrl + `/city_ranking&` + keyString\r\n  const response = await getAsync(url);\r\n  return response?.data || []\r\n\r\n}\r\n\r\nexport async function getNearestCity() {\r\n  let url = baseUrl + `/nearest_city?` + keyString\r\n  const response = await getAsync(url);\r\n  return response?.data?.data || {}\r\n}"]},"metadata":{},"sourceType":"module"}