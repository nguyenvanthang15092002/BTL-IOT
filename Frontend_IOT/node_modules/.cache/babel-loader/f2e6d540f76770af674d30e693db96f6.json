{"ast":null,"code":"var _jsxFileName = \"E:\\\\CongNgheThongTinBk\\\\20221\\\\IotVaUngDung\\\\btl\\\\Nhom10\\\\sourcecode\\\\iot-web-fe\\\\src\\\\screens\\\\Devices\\\\components\\\\ModalDevices.js\",\n    _s = $RefreshSig$();\n\nimport _styled from \"@emotion/styled\";\nimport React, { useState } from 'react';\nimport { X } from 'react-feather';\nimport { toastError } from '../../../constant/toast';\nimport { useDevicesContext } from '../context';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LabelText = _styled.label({\n  \"float\": \"left\",\n  \"marginBottom\": \"0.75rem\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(0, 0, 0, var(--tw-text-opacity))\"\n});\n\n_c = LabelText;\n\nconst ContainerModal = _styled.div({\n  \"width\": \"100%\"\n});\n\n_c2 = ContainerModal;\n\nconst PillButton = _styled.input({\n  \"--tw-bg-opacity\": \"1\",\n  \"backgroundColor\": \"rgba(66, 153, 225, var(--tw-bg-opacity))\",\n  \":hover\": {\n    \"--tw-bg-opacity\": \"1\",\n    \"backgroundColor\": \"rgba(43, 108, 176, var(--tw-bg-opacity))\"\n  },\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(255, 255, 255, var(--tw-text-opacity))\",\n  \"fontWeight\": \"700\",\n  \"paddingTop\": \"0.5rem\",\n  \"paddingBottom\": \"0.5rem\",\n  \"paddingLeft\": \"1rem\",\n  \"paddingRight\": \"1rem\",\n  \"borderRadius\": \"9999px\",\n  \"borderStyle\": \"none\",\n  \"width\": \"100%\",\n  \"marginTop\": \"1rem\"\n});\n\n_c3 = PillButton;\n\nconst ModalDevices = _ref => {\n  _s();\n\n  let {\n    item\n  } = _ref;\n  const [deviceName, setDeviceName] = useState(item === null || item === void 0 ? void 0 : item.deviceName);\n  const {\n    updateDevice,\n    setOpenModal\n  } = useDevicesContext();\n  const [stateDevice, setStateDevice] = useState(item === null || item === void 0 ? void 0 : item.connectState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-window\",\n      children: /*#__PURE__*/_jsxDEV(ContainerModal, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault(); // if (deviceName !== item?.deviceName && stateDevice !== item?.connectState) {\n            //   console.log(\"deviceName = \", deviceName)\n            //   console.log(\"connectState = \", stateDevice)\n            //   updateDevice(item?._id, deviceName, stateDevice)\n            // }\n            //   else toastError('Nothing was changed!')\n\n            updateDevice(item === null || item === void 0 ? void 0 : item._id, deviceName, stateDevice);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-close\",\n            onClick: () => setOpenModal(false),\n            children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 78\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: 'black'\n            },\n            children: \"Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(LabelText, {\n            children: \"Device Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"inputdevice\",\n            placeholder: \"Device Name\",\n            defaultValue: item === null || item === void 0 ? void 0 : item.deviceName,\n            onChange: e => setDeviceName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LabelText, {\n            children: \"Device State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'right'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"switch\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                defaultChecked: (item === null || item === void 0 ? void 0 : item.connectState) === \"ON\",\n                onChange: e => setStateDevice(e.target.checked ? \"ON\" : \"OFF\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PillButton, {\n            type: \"submit\",\n            value: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ModalDevices, \"8NwjxtDXOovpu45RcGVG7U9WEF0=\", false, function () {\n  return [useDevicesContext];\n});\n\n_c4 = ModalDevices;\nexport default ModalDevices;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"LabelText\");\n$RefreshReg$(_c2, \"ContainerModal\");\n$RefreshReg$(_c3, \"PillButton\");\n$RefreshReg$(_c4, \"ModalDevices\");","map":{"version":3,"sources":["E:/CongNgheThongTinBk/20221/IotVaUngDung/btl/Nhom10/sourcecode/iot-web-fe/src/screens/Devices/components/ModalDevices.js"],"names":["React","useState","X","toastError","useDevicesContext","LabelText","tw","label","ContainerModal","div","PillButton","input","ModalDevices","item","deviceName","setDeviceName","updateDevice","setOpenModal","stateDevice","setStateDevice","connectState","e","preventDefault","_id","color","target","value","float","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { X } from 'react-feather'\r\nimport tw from 'twin.macro'\r\nimport { toastError } from '../../../constant/toast'\r\nimport { useDevicesContext } from '../context'\r\nimport '../style.css'\r\n\r\nconst LabelText = tw.label`float-left mb-3 text-black`\r\nconst ContainerModal = tw.div`w-full`\r\nconst PillButton = tw.input`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full border-none w-full mt-4`\r\nconst ModalDevices = ({ item }) => {\r\n  const [deviceName, setDeviceName] = useState(item?.deviceName)\r\n  const { updateDevice, setOpenModal } = useDevicesContext()\r\n  const [stateDevice, setStateDevice] = useState(item?.connectState)\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-window\">\r\n        <ContainerModal>\r\n          <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            // if (deviceName !== item?.deviceName && stateDevice !== item?.connectState) {\r\n            //   console.log(\"deviceName = \", deviceName)\r\n            //   console.log(\"connectState = \", stateDevice)\r\n            //   updateDevice(item?._id, deviceName, stateDevice)\r\n            // }\r\n            //   else toastError('Nothing was changed!')\r\n            updateDevice(item?._id, deviceName, stateDevice)\r\n\r\n          }}>\r\n            <div className=\"modal-close\" onClick={() => setOpenModal(false)}><X /></div>\r\n            <h1 style={{ color: 'black' }}>Device</h1><br />\r\n            <LabelText>Device Name</LabelText>\r\n            <input type=\"text\" className='inputdevice' placeholder='Device Name' defaultValue={item?.deviceName} onChange={(e) => setDeviceName(e.target.value)} />\r\n            <LabelText>Device State</LabelText>\r\n            <div style={{ float: 'right' }}>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\" defaultChecked={item?.connectState === \"ON\"} onChange={e => setStateDevice(e.target.checked ? \"ON\" : \"OFF\")} />\r\n                <span className=\"slider round\"></span>\r\n              </label>\r\n            </div>\r\n            <PillButton type=\"submit\" value=\"Save\" />\r\n          </form>\r\n        </ContainerModal>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default ModalDevices\r\n"]},"metadata":{},"sourceType":"module"}