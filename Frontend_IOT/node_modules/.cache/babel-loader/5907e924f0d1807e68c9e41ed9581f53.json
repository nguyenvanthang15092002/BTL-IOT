{"ast":null,"code":"export var ANCHOR_POSITION = {\n  top: {\n    x: 0.5,\n    y: 0\n  },\n  'top-left': {\n    x: 0,\n    y: 0\n  },\n  'top-right': {\n    x: 1,\n    y: 0\n  },\n  bottom: {\n    x: 0.5,\n    y: 1\n  },\n  'bottom-left': {\n    x: 0,\n    y: 1\n  },\n  'bottom-right': {\n    x: 1,\n    y: 1\n  },\n  left: {\n    x: 0,\n    y: 0.5\n  },\n  right: {\n    x: 1,\n    y: 0.5\n  }\n};\nvar ANCHOR_TYPES = Object.keys(ANCHOR_POSITION);\nexport function getDynamicPosition(_ref) {\n  var x = _ref.x,\n    y = _ref.y,\n    width = _ref.width,\n    height = _ref.height,\n    selfWidth = _ref.selfWidth,\n    selfHeight = _ref.selfHeight,\n    anchor = _ref.anchor,\n    _ref$padding = _ref.padding,\n    padding = _ref$padding === void 0 ? 0 : _ref$padding;\n  var _ANCHOR_POSITION$anch = ANCHOR_POSITION[anchor],\n    anchorX = _ANCHOR_POSITION$anch.x,\n    anchorY = _ANCHOR_POSITION$anch.y;\n  var top = y - anchorY * selfHeight;\n  var bottom = top + selfHeight;\n  var cutoffY = Math.max(0, padding - top) + Math.max(0, bottom - height + padding);\n  if (cutoffY > 0) {\n    var bestAnchorY = anchorY;\n    var minCutoff = cutoffY;\n    for (anchorY = 0; anchorY <= 1; anchorY += 0.5) {\n      top = y - anchorY * selfHeight;\n      bottom = top + selfHeight;\n      cutoffY = Math.max(0, padding - top) + Math.max(0, bottom - height + padding);\n      if (cutoffY < minCutoff) {\n        minCutoff = cutoffY;\n        bestAnchorY = anchorY;\n      }\n    }\n    anchorY = bestAnchorY;\n  }\n  var xStep = 0.5;\n  if (anchorY === 0.5) {\n    anchorX = Math.floor(anchorX);\n    xStep = 1;\n  }\n  var left = x - anchorX * selfWidth;\n  var right = left + selfWidth;\n  var cutoffX = Math.max(0, padding - left) + Math.max(0, right - width + padding);\n  if (cutoffX > 0) {\n    var bestAnchorX = anchorX;\n    var _minCutoff = cutoffX;\n    for (anchorX = 0; anchorX <= 1; anchorX += xStep) {\n      left = x - anchorX * selfWidth;\n      right = left + selfWidth;\n      cutoffX = Math.max(0, padding - left) + Math.max(0, right - width + padding);\n      if (cutoffX < _minCutoff) {\n        _minCutoff = cutoffX;\n        bestAnchorX = anchorX;\n      }\n    }\n    anchorX = bestAnchorX;\n  }\n  return ANCHOR_TYPES.find(function (positionType) {\n    var anchorPosition = ANCHOR_POSITION[positionType];\n    return anchorPosition.x === anchorX && anchorPosition.y === anchorY;\n  }) || anchor;\n}","map":{"version":3,"mappings":"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","names":["ANCHOR_POSITION","top","x","y","bottom","left","right","ANCHOR_TYPES","Object","keys","getDynamicPosition","width","height","selfWidth","selfHeight","anchor","_ref$padding","padding","anchorX","anchorY","cutoffY","Math","max","bestAnchorY","minCutoff","xStep","floor","cutoffX","bestAnchorX","find","anchorPosition","positionType"],"sources":["../../../src/utils/dynamic-position.js"],"sourcesContent":["export const ANCHOR_POSITION = {\n  top: {x: 0.5, y: 0},\n  'top-left': {x: 0, y: 0},\n  'top-right': {x: 1, y: 0},\n  bottom: {x: 0.5, y: 1},\n  'bottom-left': {x: 0, y: 1},\n  'bottom-right': {x: 1, y: 1},\n  left: {x: 0, y: 0.5},\n  right: {x: 1, y: 0.5}\n};\n\nconst ANCHOR_TYPES = Object.keys(ANCHOR_POSITION);\n\n/**\n * Calculate the dynamic position for a popup to fit in a container.\n * @param {Object} opts\n * @param {Number} opts.x - x position of the anchor on screen\n * @param {Number} opts.y - y position of the anchor on screen\n * @param {Number} opts.width - width of the container\n * @param {Number} opts.height - height of the container\n * @param {Number} opts.padding - extra space from the edge in pixels\n * @param {Number} opts.selfWidth - width of the popup\n * @param {Number} opts.selfHeight - height of the popup\n * @param {String} opts.anchor - type of the anchor, one of 'top', 'bottom',\n    'left', 'right', 'top-left', 'top-right', 'bottom-left' , and  'bottom-right'\n * @returns {String} position - one of 'top', 'bottom',\n    'left', 'right', 'top-left', 'top-right', 'bottom-left' , and  'bottom-right'\n */\n// eslint-disable-next-line complexity,max-statements\nexport function getDynamicPosition({\n  x,\n  y,\n  width,\n  height,\n  selfWidth,\n  selfHeight,\n  anchor,\n  padding = 0\n}) {\n  let {x: anchorX, y: anchorY} = ANCHOR_POSITION[anchor];\n\n  // anchorY: top - 0, center - 0.5, bottom - 1\n  let top = y - anchorY * selfHeight;\n  let bottom = top + selfHeight;\n  let cutoffY = Math.max(0, padding - top) + Math.max(0, bottom - height + padding);\n\n  if (cutoffY > 0) {\n    // Needs vertical adjustment\n    let bestAnchorY = anchorY;\n    let minCutoff = cutoffY;\n    // Test anchorY at 0.5 step between [0, 1]\n    for (anchorY = 0; anchorY <= 1; anchorY += 0.5) {\n      top = y - anchorY * selfHeight;\n      bottom = top + selfHeight;\n      cutoffY = Math.max(0, padding - top) + Math.max(0, bottom - height + padding);\n      if (cutoffY < minCutoff) {\n        minCutoff = cutoffY;\n        bestAnchorY = anchorY;\n      }\n    }\n    anchorY = bestAnchorY;\n  }\n\n  // If needed, adjust anchorX at 0.5 step between [0, 1]\n  let xStep = 0.5;\n  if (anchorY === 0.5) {\n    // If y is centered, then x cannot also be centered\n    anchorX = Math.floor(anchorX);\n    xStep = 1;\n  }\n\n  // anchorX: left - 0, center - 0.5, right - 1\n  let left = x - anchorX * selfWidth;\n  let right = left + selfWidth;\n  let cutoffX = Math.max(0, padding - left) + Math.max(0, right - width + padding);\n\n  if (cutoffX > 0) {\n    // Needs horizontal adjustment\n    let bestAnchorX = anchorX;\n    let minCutoff = cutoffX;\n    // Test anchorX at xStep between [0, 1]\n    for (anchorX = 0; anchorX <= 1; anchorX += xStep) {\n      left = x - anchorX * selfWidth;\n      right = left + selfWidth;\n      cutoffX = Math.max(0, padding - left) + Math.max(0, right - width + padding);\n      if (cutoffX < minCutoff) {\n        minCutoff = cutoffX;\n        bestAnchorX = anchorX;\n      }\n    }\n    anchorX = bestAnchorX;\n  }\n\n  // Find the name of the new anchor position\n  return (\n    ANCHOR_TYPES.find(positionType => {\n      const anchorPosition = ANCHOR_POSITION[positionType];\n      return anchorPosition.x === anchorX && anchorPosition.y === anchorY;\n    }) || anchor\n  );\n}\n"]},"metadata":{},"sourceType":"module"}