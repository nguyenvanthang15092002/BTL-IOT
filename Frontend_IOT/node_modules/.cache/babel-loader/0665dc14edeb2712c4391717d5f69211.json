{"ast":null,"code":"var WRAPPED_ANGULAR_PROPS = {\n  longitude: 1,\n  bearing: 1\n};\nexport function mod(value, divisor) {\n  var modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\nexport function isValid(prop) {\n  return Number.isFinite(prop) || Array.isArray(prop);\n}\nfunction isWrappedAngularProp(propName) {\n  return propName in WRAPPED_ANGULAR_PROPS;\n}\nexport function getEndValueByShortestPath(propName, startValue, endValue) {\n  if (isWrappedAngularProp(propName) && Math.abs(endValue - startValue) > 180) {\n    endValue = endValue < 0 ? endValue + 360 : endValue - 360;\n  }\n  return endValue;\n}","map":{"version":3,"mappings":"AAAA,IAAMA,qBAAqB,GAAG;EAC5BC,SAAS,EAAE,CADiB;EAE5BC,OAAO,EAAE;AAFmB,CAA9B;AAKA,OAAO,SAASC,GAAT,CAAaC,KAAb,EAAoBC,OAApB,EAA6B;EAClC,IAAMC,OAAO,GAAGF,KAAK,GAAGC,OAAxB;EACA,OAAOC,OAAO,GAAG,CAAV,GAAcD,OAAO,GAAGC,OAAxB,GAAkCA,OAAzC;AACD;AAED,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;EAC5B,OAAOC,MAAM,CAACC,QAAP,CAAgBF,IAAhB,KAAyBG,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAAhC;AACD;AAED,SAASK,oBAAT,CAA8BC,QAA9B,EAAwC;EACtC,OAAOA,QAAQ,IAAId,qBAAnB;AACD;AAED,OAAO,SAASe,yBAAT,CAAmCD,QAAnC,EAA6CE,UAA7C,EAAyDC,QAAzD,EAAmE;EACxE,IAAIJ,oBAAoB,CAACC,QAAD,CAApB,IAAkCI,IAAI,CAACC,GAAL,CAASF,QAAQ,GAAGD,UAApB,IAAkC,GAAxE,EAA6E;IAC3EC,QAAQ,GAAGA,QAAQ,GAAG,CAAX,GAAeA,QAAQ,GAAG,GAA1B,GAAgCA,QAAQ,GAAG,GAAtD;EACD;EACD,OAAOA,QAAP;AACD","names":["WRAPPED_ANGULAR_PROPS","longitude","bearing","mod","value","divisor","modulus","isValid","prop","Number","isFinite","Array","isArray","isWrappedAngularProp","propName","getEndValueByShortestPath","startValue","endValue","Math","abs"],"sources":["../../../../src/utils/transition/transition-utils.js"],"sourcesContent":["const WRAPPED_ANGULAR_PROPS = {\n  longitude: 1,\n  bearing: 1\n};\n\nexport function mod(value, divisor) {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\nexport function isValid(prop) {\n  return Number.isFinite(prop) || Array.isArray(prop);\n}\n\nfunction isWrappedAngularProp(propName) {\n  return propName in WRAPPED_ANGULAR_PROPS;\n}\n\nexport function getEndValueByShortestPath(propName, startValue, endValue) {\n  if (isWrappedAngularProp(propName) && Math.abs(endValue - startValue) > 180) {\n    endValue = endValue < 0 ? endValue + 360 : endValue - 360;\n  }\n  return endValue;\n}\n"]},"metadata":{},"sourceType":"module"}