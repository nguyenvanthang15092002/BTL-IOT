{"ast":null,"code":"import { deleteAsyncWithToken, getAsync, getAsyncWithToken, postAsyncWithToken, putAsyncWithToken } from \"../constant/request\";\n\nfunction getCookie() {\n  let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'userid';\n  const v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\n  return v ? v[2] : null;\n}\n\nfunction getCookieUser() {\n  let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'currentuser';\n  const v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\n  return v ? v[2] : null;\n}\n\nexport async function getUserDevices() {\n  const url = process.env.REACT_APP_BACK_END + '/users/' + getCookie();\n  const response = await getAsyncWithToken(url);\n  return (response === null || response === void 0 ? void 0 : response.data) || [];\n}\nexport async function deleteDeviceById(deviceId) {\n  const url = process.env.REACT_APP_BACK_END + '/devices/' + deviceId;\n  const response = await deleteAsyncWithToken(url);\n  return (response === null || response === void 0 ? void 0 : response.data) || [];\n}\nexport async function updateDeviceById(deviceId) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const url = process.env.REACT_APP_BACK_END + '/devices/' + deviceId;\n  const response = await putAsyncWithToken(url, params);\n  return (response === null || response === void 0 ? void 0 : response.data) || [];\n}\nexport async function getDeviceById(deviceId) {\n  const url = process.env.REACT_APP_BACK_END + '/devices/' + deviceId;\n  const response = await getAsyncWithToken(url);\n  return (response === null || response === void 0 ? void 0 : response.data) || [];\n}\nexport async function updateDeviceByIdFetch(deviceId) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const url = process.env.REACT_APP_BACK_END + '/devices/' + deviceId;\n  await fetch(url, {\n    method: 'PUT',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + getCookieUser(),\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify(params)\n  }).then(data => {\n    return (data === null || data === void 0 ? void 0 : data.data) || [];\n  }).catch(err => console.log(`err`, err)); // const response = await putAsyncWithToken(url, params)\n  // console.log(`response`, response, params)\n}\nexport async function addDeviceById(param) {\n  const url = process.env.REACT_APP_BACK_END + '/users/' + getCookie() + '/devices';\n  const response = await postAsyncWithToken(url, param);\n  return (response === null || response === void 0 ? void 0 : response.data) || [];\n}\nexport async function addDeviceByIdFetch() {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const url = process.env.REACT_APP_BACK_END + '/users/' + getCookie() + '/devices';\n  await fetch(url, {\n    method: 'POST',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + getCookieUser(),\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify(params)\n  }).then(data => {\n    return (data === null || data === void 0 ? void 0 : data.data) || [];\n  }).catch(err => console.log(`err`, err)); // const response = await putAsyncWithToken(url, params)\n  // console.log(`response`, response, params)\n}\nexport async function getPublicDevices() {\n  let url = process.env.REACT_APP_BACK_END + '/devices/publicDevices';\n  const response = await getAsync(url);\n  return (response === null || response === void 0 ? void 0 : response.data) || [];\n}","map":{"version":3,"sources":["E:/CongNgheThongTinBk/20221/IotVaUngDung/btl/Nhom10/sourcecode/iot-web-fe/src/services/devicesServices.js"],"names":["deleteAsyncWithToken","getAsync","getAsyncWithToken","postAsyncWithToken","putAsyncWithToken","getCookie","name","v","document","cookie","match","getCookieUser","getUserDevices","url","process","env","REACT_APP_BACK_END","response","data","deleteDeviceById","deviceId","updateDeviceById","params","getDeviceById","updateDeviceByIdFetch","fetch","method","cache","headers","body","JSON","stringify","then","catch","err","console","log","addDeviceById","param","addDeviceByIdFetch","getPublicDevices"],"mappings":"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","sourcesContent":["import { deleteAsyncWithToken, getAsync, getAsyncWithToken, postAsyncWithToken, putAsyncWithToken } from \"../constant/request\";\r\n\r\nfunction getCookie(name = 'userid') {\r\n  const v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n  return v ? v[2] : null;\r\n}\r\n\r\nfunction getCookieUser(name = 'currentuser') {\r\n  const v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n  return v ? v[2] : null;\r\n}\r\n\r\nexport async function getUserDevices() {\r\n  const url = process.env.REACT_APP_BACK_END + '/users/' + getCookie()\r\n  const response = await getAsyncWithToken(url)\r\n  return response?.data || []\r\n}\r\n\r\nexport async function deleteDeviceById(deviceId) {\r\n  const url = process.env.REACT_APP_BACK_END + '/devices/' + deviceId\r\n  const response = await deleteAsyncWithToken(url)\r\n  return response?.data || []\r\n}\r\nexport async function updateDeviceById(deviceId, params = {}) {\r\n  const url = process.env.REACT_APP_BACK_END + '/devices/' + deviceId\r\n  const response = await putAsyncWithToken(url, params)\r\n  return response?.data || []\r\n}\r\nexport async function getDeviceById(deviceId) {\r\n  const url = process.env.REACT_APP_BACK_END + '/devices/' + deviceId\r\n  const response = await getAsyncWithToken(url)\r\n  return response?.data || []\r\n}\r\n\r\nexport async function updateDeviceByIdFetch(deviceId, params = {}) {\r\n  const url = process.env.REACT_APP_BACK_END + '/devices/' + deviceId\r\n  await fetch(url, {\r\n    method: 'PUT',\r\n    cache: 'no-cache',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' + getCookieUser(),\r\n      'Accept': 'application/json',\r\n    },\r\n    body: JSON.stringify(params)\r\n  },\r\n  ).then(data => { return data?.data || [] })\r\n    .catch(err => console.log(`err`, err))\r\n  // const response = await putAsyncWithToken(url, params)\r\n  // console.log(`response`, response, params)\r\n\r\n}\r\n\r\nexport async function addDeviceById(param) {\r\n  const url = process.env.REACT_APP_BACK_END + '/users/' + getCookie() + '/devices'\r\n  const response = await postAsyncWithToken(url, param)\r\n  return response?.data || []\r\n}\r\n\r\nexport async function addDeviceByIdFetch(params = {}) {\r\n  const url = process.env.REACT_APP_BACK_END + '/users/' + getCookie() + '/devices'\r\n  await fetch(url, {\r\n    method: 'POST',\r\n    cache: 'no-cache',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' + getCookieUser(),\r\n      'Accept': 'application/json',\r\n    },\r\n    body: JSON.stringify(params)\r\n  },\r\n  ).then(data => { return data?.data || [] })\r\n    .catch(err => console.log(`err`, err))\r\n  // const response = await putAsyncWithToken(url, params)\r\n  // console.log(`response`, response, params)\r\n\r\n}\r\nexport async function getPublicDevices() {\r\n  let url = process.env.REACT_APP_BACK_END + '/devices/publicDevices'\r\n  const response = await getAsync(url)\r\n  return response?.data || []\r\n}"]},"metadata":{},"sourceType":"module"}