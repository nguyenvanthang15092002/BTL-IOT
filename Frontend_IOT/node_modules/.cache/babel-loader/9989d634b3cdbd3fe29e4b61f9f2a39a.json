{"ast":null,"code":"import { worldToLngLat } from './web-mercator-utils';\nimport { mod, log2 } from './math-utils';\nconst TILE_SIZE = 512;\nexport default function normalizeViewportProps(_ref) {\n  let {\n    width,\n    height,\n    longitude,\n    latitude,\n    zoom,\n    pitch = 0,\n    bearing = 0\n  } = _ref;\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n  const minZoom = log2(height / TILE_SIZE);\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n  return {\n    width,\n    height,\n    longitude,\n    latitude,\n    zoom,\n    pitch,\n    bearing\n  };\n}","map":{"version":3,"mappings":"AAAA,SAAQA,aAAR,QAA4B,sBAA5B;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,cAAxB;AAGA,MAAMC,SAAS,GAAG,GAAlB;AAIA,eAAe,SAASC,sBAAT,OAQZ;EAAA,IAR4C;IAC7CC,KAD6C;IAE7CC,MAF6C;IAG7CC,SAH6C;IAI7CC,QAJ6C;IAK7CC,IAL6C;IAM7CC,KAAK,GAAG,CANqC;IAO7CC,OAAO,GAAG;EAPmC,CAAhC;EAUb,IAAIJ,SAAS,GAAG,CAAC,GAAb,IAAoBA,SAAS,GAAG,GAApC,EAAyC;IACvCA,SAAS,GAAGN,GAAG,CAACM,SAAS,GAAG,GAAb,EAAkB,GAAlB,CAAH,GAA4B,GAAxC;EACD;EACD,IAAII,OAAO,GAAG,CAAC,GAAX,IAAkBA,OAAO,GAAG,GAAhC,EAAqC;IACnCA,OAAO,GAAGV,GAAG,CAACU,OAAO,GAAG,GAAX,EAAgB,GAAhB,CAAH,GAA0B,GAApC;EACD;EAGD,MAAMC,OAAO,GAAGV,IAAI,CAACI,MAAM,GAAGH,SAAV,CAApB;EACA,IAAIM,IAAI,IAAIG,OAAZ,EAAqB;IACnBH,IAAI,GAAGG,OAAP;IACAJ,QAAQ,GAAG,CAAX;EACD,CAHD,MAGO;IAEL,MAAMK,gBAAgB,GAAGP,MAAM,GAAG,CAAT,GAAaQ,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYN,IAAZ,CAAtC;IACA,MAAMO,WAAW,GAAGhB,aAAa,CAAC,CAAC,CAAD,EAAIa,gBAAJ,CAAD,CAAb,CAAqC,CAArC,CAApB;IACA,IAAIL,QAAQ,GAAGQ,WAAf,EAA4B;MAC1BR,QAAQ,GAAGQ,WAAX;IACD,CAFD,MAEO;MACL,MAAMC,WAAW,GAAGjB,aAAa,CAAC,CAAC,CAAD,EAAIG,SAAS,GAAGU,gBAAhB,CAAD,CAAb,CAAiD,CAAjD,CAApB;MACA,IAAIL,QAAQ,GAAGS,WAAf,EAA4B;QAC1BT,QAAQ,GAAGS,WAAX;MACD;IACF;EACF;EAED,OAAO;IAACZ,KAAD;IAAQC,MAAR;IAAgBC,SAAhB;IAA2BC,QAA3B;IAAqCC,IAArC;IAA2CC,KAA3C;IAAkDC;EAAlD,CAAP;AACD","names":["worldToLngLat","mod","log2","TILE_SIZE","normalizeViewportProps","width","height","longitude","latitude","zoom","pitch","bearing","minZoom","halfHeightPixels","Math","pow","minLatitude","maxLatitude"],"sources":["../../src/normalize-viewport-props.js"],"sourcesContent":["import {worldToLngLat} from './web-mercator-utils';\nimport {mod, log2} from './math-utils';\n\n// defined by mapbox-gl\nconst TILE_SIZE = 512;\n\n// Apply mathematical constraints to viewport props\n// eslint-disable-next-line complexity\nexport default function normalizeViewportProps({\n  width,\n  height,\n  longitude,\n  latitude,\n  zoom,\n  pitch = 0,\n  bearing = 0\n}) {\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  const minZoom = log2(height / TILE_SIZE);\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    // Eliminate white space above and below the map\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n"]},"metadata":{},"sourceType":"module"}