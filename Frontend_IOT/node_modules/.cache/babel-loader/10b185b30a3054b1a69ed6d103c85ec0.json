{"ast":null,"code":"var _jsxFileName = \"E:\\\\CongNgheThongTinBk\\\\20221\\\\IotVaUngDung\\\\btl\\\\Nhom10\\\\sourcecode\\\\iot-web-fe\\\\src\\\\screens\\\\Login\\\\context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useMemo, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toastError, toastSuccess } from \"../../constant/toast\";\nimport { login, signup } from \"../../services/authenService\"; //context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginContext = /*#__PURE__*/createContext({}); //hook\n\nexport const useLoginContext = () => {\n  _s();\n\n  return useContext(LoginContext);\n}; //provider\n\n_s(useLoginContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const LoginContextProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [cookies, setCookie, removeCookie] = useCookies(['currentuser']);\n  const [userid, setUserid] = useState(\"\");\n\n  const handleSignup = async (username, password) => {\n    let tmp = `{ \"username\": \"${username}\", \"password\": \"${password}\" }`;\n    let params = JSON.parse(tmp);\n\n    if (username && password) {\n      const response = await signup(params);\n\n      if (response === null || response === void 0 ? void 0 : response.token) {\n        toastSuccess(\"Success Notification !\"); // await setCookie(\"currentuser\", response?.token)\n\n        setTimeout(() => window.location.reload(), 2000);\n      } else toastError(response === null || response === void 0 ? void 0 : response.error);\n    } else {\n      toastError(\"Error\");\n    }\n  };\n\n  const handleLogin = async (username, password) => {\n    let tmp = `{ \"username\": \"${username}\", \"password\": \"${password}\" }`;\n    let params = JSON.parse(tmp);\n\n    if (username && password) {\n      const response = await login(params);\n\n      if (response === null || response === void 0 ? void 0 : response.token) {\n        toastSuccess(\"Success Notification !\");\n        await setCookie(\"currentuser\", response === null || response === void 0 ? void 0 : response.token);\n        setTimeout(() => window.location.reload(), 2000);\n      } else toastError(response === null || response === void 0 ? void 0 : response.error);\n    } else {\n      toastError(\"Error\");\n    }\n  };\n\n  const value = useMemo(() => ({\n    handleSignup,\n    handleLogin\n  }), []);\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(LoginContextProvider, \"+MzlHMCoK4n8N1uBr4vNIkHC49g=\", false, function () {\n  return [useNavigate, useCookies];\n});\n\n_c = LoginContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContextProvider\");","map":{"version":3,"sources":["E:/CongNgheThongTinBk/20221/IotVaUngDung/btl/Nhom10/sourcecode/iot-web-fe/src/screens/Login/context.js"],"names":["createContext","useContext","useMemo","useState","useCookies","useNavigate","toastError","toastSuccess","login","signup","LoginContext","useLoginContext","LoginContextProvider","children","navigate","cookies","setCookie","removeCookie","userid","setUserid","handleSignup","username","password","tmp","params","JSON","parse","response","token","setTimeout","window","location","reload","error","handleLogin","value"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,OAApC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,sBAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,8BAA9B,C,CAGA;;;AACA,OAAO,MAAMC,YAAY,gBAAGV,aAAa,CAAC,EAAD,CAAlC,C,CAEP;;AACA,OAAO,MAAMW,eAAe,GAAG;AAAA;;AAAA,SAAMV,UAAU,CAACS,YAAD,CAAhB;AAAA,CAAxB,C,CAEP;;GAFaC,e;;AAGb,OAAO,MAAMC,oBAAoB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpD,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,OAAD,EAAUC,SAAV,EAAqBC,YAArB,IAAqCb,UAAU,CAAC,CAAC,aAAD,CAAD,CAArD;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMiB,YAAY,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjD,QAAIC,GAAG,GAAI,kBAAiBF,QAAS,mBAAkBC,QAAS,KAAhE;AACA,QAAIE,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAb;;AACA,QAAIF,QAAQ,IAAIC,QAAhB,EAA0B;AACxB,YAAMK,QAAQ,GAAG,MAAMlB,MAAM,CAACe,MAAD,CAA7B;;AACA,UAAIG,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEC,KAAd,EAAqB;AACnBrB,QAAAA,YAAY,CAAC,wBAAD,CAAZ,CADmB,CAEnB;;AAEAsB,QAAAA,UAAU,CAAC,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAP,EAAiC,IAAjC,CAAV;AAED,OAND,MAQE1B,UAAU,CAACqB,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEM,KAAX,CAAV;AACH,KAXD,MAYK;AACH3B,MAAAA,UAAU,CAAC,OAAD,CAAV;AACD;AACF,GAlBD;;AAoBA,QAAM4B,WAAW,GAAG,OAAOb,QAAP,EAAiBC,QAAjB,KAA8B;AAChD,QAAIC,GAAG,GAAI,kBAAiBF,QAAS,mBAAkBC,QAAS,KAAhE;AACA,QAAIE,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAb;;AACA,QAAIF,QAAQ,IAAIC,QAAhB,EAA0B;AACxB,YAAMK,QAAQ,GAAG,MAAMnB,KAAK,CAACgB,MAAD,CAA5B;;AACA,UAAIG,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEC,KAAd,EAAqB;AACnBrB,QAAAA,YAAY,CAAC,wBAAD,CAAZ;AACA,cAAMS,SAAS,CAAC,aAAD,EAAgBW,QAAhB,aAAgBA,QAAhB,uBAAgBA,QAAQ,CAAEC,KAA1B,CAAf;AAEAC,QAAAA,UAAU,CAAC,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAP,EAAiC,IAAjC,CAAV;AAED,OAND,MAQE1B,UAAU,CAACqB,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEM,KAAX,CAAV;AACH,KAXD,MAYK;AACH3B,MAAAA,UAAU,CAAC,OAAD,CAAV;AACD;AACF,GAlBD;;AAqBA,QAAM6B,KAAK,GAAGjC,OAAO,CAAC,OAAO;AAC3BkB,IAAAA,YAD2B;AACbc,IAAAA;AADa,GAAP,CAAD,EAGnB,EAHmB,CAArB;AAIA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA,cACGtB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtDM;;IAAMD,oB;UACMP,W,EAC0BD,U;;;KAFhCQ,oB","sourcesContent":["import { createContext, useContext, useMemo, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toastError, toastSuccess } from \"../../constant/toast\";\r\nimport { login, signup } from \"../../services/authenService\";\r\n\r\n\r\n//context\r\nexport const LoginContext = createContext({})\r\n\r\n//hook\r\nexport const useLoginContext = () => useContext(LoginContext)\r\n\r\n//provider\r\nexport const LoginContextProvider = ({ children }) => {\r\n  const navigate = useNavigate()\r\n  const [cookies, setCookie, removeCookie] = useCookies(['currentuser']);\r\n  const [userid, setUserid] = useState(\"\")\r\n  const handleSignup = async (username, password) => {\r\n    let tmp = `{ \"username\": \"${username}\", \"password\": \"${password}\" }`\r\n    let params = JSON.parse(tmp)\r\n    if (username && password) {\r\n      const response = await signup(params)\r\n      if (response?.token) {\r\n        toastSuccess(\"Success Notification !\")\r\n        // await setCookie(\"currentuser\", response?.token)\r\n\r\n        setTimeout(() => window.location.reload(), 2000)\r\n\r\n      }\r\n      else\r\n        toastError(response?.error)\r\n    }\r\n    else {\r\n      toastError(\"Error\")\r\n    }\r\n  }\r\n\r\n  const handleLogin = async (username, password) => {\r\n    let tmp = `{ \"username\": \"${username}\", \"password\": \"${password}\" }`\r\n    let params = JSON.parse(tmp)\r\n    if (username && password) {\r\n      const response = await login(params)\r\n      if (response?.token) {\r\n        toastSuccess(\"Success Notification !\")\r\n        await setCookie(\"currentuser\", response?.token)\r\n\r\n        setTimeout(() => window.location.reload(), 2000)\r\n\r\n      }\r\n      else\r\n        toastError(response?.error)\r\n    }\r\n    else {\r\n      toastError(\"Error\")\r\n    }\r\n  }\r\n\r\n\r\n  const value = useMemo(() => ({\r\n    handleSignup, handleLogin\r\n  }),\r\n    [])\r\n  return (\r\n    <LoginContext.Provider value={value}>\r\n      {children}\r\n    </LoginContext.Provider>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}